# 设置连接，可选方式： jdbc restful
app.driver=jdbc
app.setPayloadBase64=true
app.charset=utf-8

# 数据库连接参数
db.username=root
db.password=taosdata
# 数据库操作Sql
# 默认数据库为 td ,默认超级表为 mqtt ；以restful的方式连接，表名必须加数据库前缀；
sql.createMetricsSql=create table if not exists td.mqtt (ts timestamp, topic binary(500), payload binary(500) , qos int,clientId binary(50)) tags (groupId int)
# {simplifyClientId}以简化的clientid作为表名，表名支持字符[a-zA-Z0-9_]，clientId需以大小写英文开头，如clientId以数字开头，须在sql写一个表名前缀；
sql.createTableSql=create table if not exists td.{simplifyClientId} using td.mqtt tags(1)
# {simplifyClientId}与上述参数一致；
# {timestamp}毫秒时间戳，取publish消息的时间；
# {topic}取publish消息的topic；
# {payload}正文，支持UTF-8编码；
# {qos}取publish消息的qos；
# {clientId}取publish消息的原始clientId；
sql.InsertSql=insert into td.{simplifyClientId} values({timestamp}, ''{topic}'' , ''{payload}'' , {qos} , ''{clientId}'')

# restful 连接
restful.url=http://192.168.0.105:6041/rest/sql

# 使用druid连接池的jdbc 连接
# url包含数据库名称，注意与上述的sql语句设置的数据库前缀保持一致
druid.url=jdbc:TAOS://192.168.0.105:6030/td
druid.driverClassName=com.taosdata.jdbc.TSDBDriver
# 监控统计拦截的filters
druid.filters=stat
# 初始化时建立物理连接的个数，初始化发生在显示调用init方法，或者第一次getConnection时
druid.initialSize=5
# 最大连接池数量
druid.maxActive=10
# 最小连接池数量
druid.minIdle:1
# 获取连接等待超时的时间，单位毫秒
druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
# 有两个含义：1) Destroy线程会检测连接的间隔时间  2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
druid.timeBetweenEvictionRunsMillis=60000
# 一个连接在池中最小生存的时间，单位是毫秒
druid.minEvictableIdleTimeMillis=300000
# 用来检测连接是否有效
druid.validationQuery=select server_status()
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
druid.testWhileIdle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnBorrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
druid.testOnReturn=false
# 是否缓存preparedStatement，也就是PSCache
druid.poolPreparedStatements=false
druid.maxPoolPreparedStatementPerConnectionSize=200